DROP TABLE IF EXISTS `stats_aliases`;
CREATE TABLE `stats_aliases` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `PLAYERID` int(11) unsigned NOT NULL DEFAULT 0,
  `AliasChecksum` int(11) NOT NULL,
  `Alias` varchar(128) NOT NULL DEFAULT '',
  `AliasAsHtml` text NOT NULL,
  `AliasStrippedCodes` varchar(128) NOT NULL DEFAULT '',
  `Count` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`,`SERVERID`,`PLAYERID`,`Alias`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Holds a List of names player used on servers';


DROP TABLE IF EXISTS `stats_attachments`;
CREATE TABLE `stats_attachments` (
  `ID` varchar(64) NOT NULL,
  `DisplayName` varchar(255) NOT NULL,
  `Description_id` varchar(255) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helper table to store known attachments / perks';

INSERT INTO `stats_attachments` (`ID`, `DisplayName`, `Description_id`) VALUES
('20mm',	'20mm',	'attachment_20mm_description'),
('acog',	'Acog Scope',	'attachment_acog_description'),
('aperture',	'Aperture',	'attachment_aperture_description'),
('bayonet',	'Bayonet',	'attachment_bayonet_description'),
('bigammo',	'Extra Ammo',	'attachment_bigammo_description'),
('bipod',	'Bipod',	'attachment_bipod_description'),
('crouch',	'Crouch',	'attachment_crouch_description'),
('ffar',	'FFar',	'attachment_ffar_description'),
('flash',	'Flash Surpressor',	'attachment_flash_description'),
('fullauto',	'Full Auto',	'attachment_fullauto_description'),
('gl',	'Grenade Launcher',	'attachment_gl_description'),
('grip',	'Grip',	'attachment_grip_description'),
('none',	'None',	'attachment_none_description'),
('reflex',	'Reflex',	'attachment_relfex_description'),
('sawoff',	'Sawoff',	'attachment_sawoff_description'),
('scoped',	'Scope',	'attachment_scoped_description'),
('selectfire',	'Select Fire',	'attachment_selectfire_description'),
('silenced',	'Silencer',	'attachment_silencer_description'),
('silencer',	'Silencer',	'attachment_silencer_description'),
('singleshot',	'Single Shot',	'attachment_singleshot_description'),
('stand',	'Stand',	'attachment_stand_description'),
('telescopic',	'Telescopic',	'attachment_telescopic_description');

DROP TABLE IF EXISTS `stats_chat`;
CREATE TABLE `stats_chat` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `PLAYERID` int(11) unsigned NOT NULL DEFAULT 0,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `ROUNDID` int(11) NOT NULL DEFAULT 0,
  `TextSaid` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`,`PLAYERID`,`SERVERID`,`ROUNDID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Optional Table to save what was said ;)';


DROP TABLE IF EXISTS `stats_config`;
CREATE TABLE `stats_config` (
  `name` varchar(63) NOT NULL DEFAULT '',
  `value` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Table to hold basic configuration values';

INSERT INTO `stats_config` (`name`, `value`) VALUES
('database_installedversion',	'9'),
('gen_gameversion',	'0');

DROP TABLE IF EXISTS `stats_consolidated`;
CREATE TABLE `stats_consolidated` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(63) NOT NULL DEFAULT '',
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `Time_Year` mediumint(9) NOT NULL DEFAULT 0,
  `Time_Month` tinyint(4) NOT NULL DEFAULT 0,
  `SortID` int(11) NOT NULL DEFAULT 0,
  `DisplayName` varchar(255) NOT NULL DEFAULT '',
  `DescriptionID` varchar(255) NOT NULL DEFAULT '0',
  `VALUE_INT` int(11) NOT NULL DEFAULT 0,
  `VALUE_TXT` varchar(255) NOT NULL DEFAULT '',
  `PLAYER_ID` int(11) unsigned NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`,`NAME`,`SERVERID`,`Time_Year`,`Time_Month`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Table to hold total values and medals';


DROP TABLE IF EXISTS `stats_damagetypes`;
CREATE TABLE `stats_damagetypes` (
  `ID` tinyint(4) NOT NULL AUTO_INCREMENT,
  `DAMAGETYPE` varchar(64) NOT NULL DEFAULT '',
  `DisplayName` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `DAMAGETYPE` (`DAMAGETYPE`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helpertable to store the damage types';

INSERT INTO `stats_damagetypes` (`ID`, `DAMAGETYPE`, `DisplayName`) VALUES
(1,	'MOD_RIFLE_BULLET',	'Rifle Bullet'),
(2,	'MOD_HEAD_SHOT',	'Headshot'),
(3,	'MOD_GRENADE_SPLASH',	'Grenade Splash'),
(4,	'MOD_SUICIDE',	'Suicide'),
(5,	'MOD_MELEE',	'Knife kill'),
(6,	'MOD_PISTOL_BULLET',	'Pistol Bullet'),
(7,	'MOD_EXPLOSIVE',	'S&D Explosion'),
(8,	'MOD_UNKNOWN',	'Unknown Damage'),
(9,	'MOD_GRENADE',	'Grenade'),
(10,	'MOD_PROJECTILE_SPLASH',	'Projectile Splash'),
(11,	'MOD_IMPACT',	'Impact'),
(12,	'MOD_PROJECTILE',	'Projectile'),
(13,	'MOD_BURNED',	'Burned'),
(14,	'MOD_BAYONET',	'Bayonet'),
(15,	'MOD_CRUSH',	'Crushed');

DROP TABLE IF EXISTS `stats_damagetypes_kills`;
CREATE TABLE `stats_damagetypes_kills` (
  `damagetypeid` tinyint(4) NOT NULL,
  `SERVERID` tinyint(4) NOT NULL,
  `Time_Year` mediumint(9) NOT NULL,
  `Time_Month` tinyint(4) NOT NULL,
  `Kills` int(11) NOT NULL,
  `PlayersCount` int(11) NOT NULL,
  PRIMARY KEY (`damagetypeid`,`SERVERID`,`Time_Year`,`Time_Month`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helper table to store and combine damagetype kills';


DROP TABLE IF EXISTS `stats_gameactions`;
CREATE TABLE `stats_gameactions` (
  `ID` smallint(6) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(64) NOT NULL DEFAULT '',
  `DisplayName` varchar(255) NOT NULL DEFAULT '',
  `SkillPoints` tinyint(4) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `NAME` (`NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helper table to game actions';

INSERT INTO `stats_gameactions` (`ID`, `NAME`, `DisplayName`, `SkillPoints`) VALUES
(11,	'Exploit abuser was suicided by server',	'ExplotAbuser',	-10),
(12,	'radio_capture',	'Radio Capture',	10),
(13,	'bomb_plant',	'Bomb Plant',	10),
(14,	'radio_destroy',	'Radio Destroy',	5),
(15,	'bomb_defuse',	'Bomb Defuse',	5),
(16,	'ctf_returned',	'Flag returned',	5),
(17,	'ctf_captured',	'Flag captured',	10),
(18,	'ctf_take',	'Flag taken',	2),
(19,	'ctf_pickup',	'Flag pickup',	2),
(20,	'ctf_defended',	'Flag defended',	5),
(21,	'unknown_action',	'Unknown',	0),
(22,	'flag_taken',	'Flag taken',	2),
(23,	'flag_returned',	'Flag returned',	5),
(24,	'flag_captured',	'Flag captured',	10),
(25,	'headquaters_captured',	'HQ Captured',	10),
(26,	'headquaters_destroyed',	'Destroyed',	5),
(27,	'bomb_planted',	'Bomb planted',	5),
(28,	'bomb_defused',	'Bomb defused',	10);

DROP TABLE IF EXISTS `stats_gametypes`;
CREATE TABLE `stats_gametypes` (
  `ID` tinyint(4) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(16) NOT NULL DEFAULT '',
  `DisplayName` varchar(127) NOT NULL DEFAULT '',
  `Description_id` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `NAME` (`NAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Contains some detailed informations about the Gametypes';


DROP TABLE IF EXISTS `stats_hitlocations`;
CREATE TABLE `stats_hitlocations` (
  `ID` tinyint(4) NOT NULL AUTO_INCREMENT,
  `BODYPART` varchar(32) NOT NULL DEFAULT '',
  `DisplayName` varchar(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `BODYPART` (`BODYPART`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Hitlocation helper table for complex statements';

INSERT INTO `stats_hitlocations` (`ID`, `BODYPART`, `DisplayName`) VALUES
(20,	'neck',	'neck'),
(21,	'torso_upper',	'Upper Torso'),
(22,	'right_leg_upper',	'Upper right leg'),
(23,	'right_leg_lower',	'Lower right leg'),
(24,	'torso_lower',	'Lower Torso'),
(25,	'head',	'Head'),
(26,	'none',	'None'),
(27,	'left_arm_upper',	'Upper left arm'),
(28,	'left_arm_lower',	'Lower left arm'),
(29,	'right_arm_lower',	'Lower right arm'),
(30,	'right_arm_upper',	'Upper right arm'),
(31,	'right_foot',	'Right foot'),
(32,	'left_foot',	'Left foot'),
(33,	'right_arm_lower',	'Lower right arm'),
(34,	'right_arm_upper',	'Upper right arm'),
(35,	'left_leg_lower',	'Lower left leg'),
(36,	'left_leg_upper',	'Upper left leg'),
(37,	'right_hand',	'Right Hand'),
(38,	'left_hand',	'Left Hand');

DROP TABLE IF EXISTS `stats_language_strings`;
CREATE TABLE `stats_language_strings` (
  `LANG` char(2) NOT NULL DEFAULT '',
  `STRINGID` varchar(255) NOT NULL DEFAULT '',
  `TEXT` text NOT NULL,
  PRIMARY KEY (`LANG`,`STRINGID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='This table holds strings which can be editied by the user (m';

INSERT INTO `stats_language_strings` (`LANG`, `STRINGID`, `TEXT`) VALUES
('DE',	'gametype_ctf',	'2 Teams die um Flaggen Spielen. Das Team, dass zuerst die benötigte Punktezahl erreicht hat, hat gewonnen.'),
('DE',	'gametype_dm',	'Jeder gegen Jeder. Der jenige, der zuerst die vorgegebene Punktezahl erreicht hat, hat gewonnen.'),
('DE',	'gametype_dom',	'2 Teams, 3 Flaggenpunkte. Das Team das mehr Flaggen besitzt, bekommt schneller und mehr Punkte. Gewonnen hat das Team, dass die vorgegebene Punktezahl erreicht hat.'),
('DE',	'gametype_hq',	'2 Teams und jeweils 1 Hauptquratier (HQ). Das Team dass das HQ eingenommen hat, muss es bis zur selbst zerstörung verteidigen. Durch das einhemen und behalten des HQ\'s gibt es Punkte. Das Team dass zuerst die vorgegebenen Punkte erreicht hat, hat gewonnen.'),
('DE',	'gametype_sab',	'2 Teams versuchen als erstes an der Bombe zu sein. Diese müssen sie dann im gegnerischen Gebiet legen und bis zum Explosions Punkt verteidigen.'),
('DE',	'gametype_sd',	'2 Teams, 1 Bombe. Ein Team muss versuchen die Bombe an einem der vorgegeben Bombenpunkten zu legen und bis zu Explosion zu verteidigen. Gelingt dies, hat das Team gewonnen. Kann jedoch das andere Team das explodieren der Bombe verhindern, hat dieses gewonnen.'),
('DE',	'gametype_tdm',	'2 Teams die gegeneinander kämpfen. Das Team, das zuerst die vorgegebene Punktezahl erreicht hat, hat gewonnen.'),
('DE',	'medal_anti_nademagnet',	'Spieler der die Granaten am meisten anzieht.'),
('DE',	'medal_anti_no1target',	'Staatsfeind. spieler mit den meisten Toden.'),
('DE',	'medal_anti_suicide',	'Spieler mit den meisten Selbstmorden.'),
('DE',	'medal_anti_teamkiller',	'Spieler mit den meisten Team abschüssen.'),
('DE',	'medal_anti_whiner',	'Spieler der am meisten rumheult.'),
('DE',	'medal_pro_claymorec4',	'Spieler mit den meisten Claymore und C4 Kills.'),
('DE',	'medal_pro_explosivekiller',	'Spieler mit den meisten explosiven Kills.'),
('DE',	'medal_pro_headshot',	'Spieler mit den meisten Headshot Kills.'),
('DE',	'medal_pro_killer',	'Spieler mit den meisten Kills.'),
('DE',	'medal_pro_knifekills',	'Spieler mit den meisten Messer Kills.'),
('DE',	'medal_pro_pistol',	'Spieler mit den meisten Pistolen Kills.'),
('DE',	'medal_pro_slappyhappy',	'Spieler mit den meisten Schlag Kills.'),
('DE',	'medal_pro_sniper',	'Spieler mit den meisten Scharfschützen Kills.'),
('EN',	'gametype_ctf',	'Similar to the Day of Defeat style of play. Whichever team captures the most flags before the round is over, wins.\r\n\r\n<br><br>Source: <a href=\"http://www.planetcallofduty.com/callofduty2/mp/maps.shtml\" target=\"_blank\">Planet CallOfDuty.com</A>\r\n'),
('EN',	'gametype_dm',	'This is basically every-man-for-himself deathmatch. No teams, no special goals, just a battlefield of chaos as everyone fights each other. It may not be realistic, but it sure is fun.\r\n\r\n<br><br>Source: <a href=\"http://www.planetcallofduty.com/callofduty2/mp/maps.shtml\" target=\"_blank\">Planet CallOfDuty.com</A>\r\n'),
('EN',	'gametype_dom',	'Flags are placed in strategic points around the map. All flags start neutral. Teams battle to hold the most flags. Game ends when the time limit is reached, or the score limit is reached.'),
('EN',	'gametype_hq',	'In this mode there are two different points on the map designated as capture points for each team. In order to score points a team must control and &#8220;setup&#8221; headquarters at one of these capture points. Once they have done that, they must defend that headquarters. The longer they can keep the headquarters from being taken, the more points they get. The interesting twist is that if you die while on the defending team, you are not allowed to respawn until your headquarters is taken over by the other team, while the attacking team still gets to respawn. This means that as you defend your headquarters, you have less team mates to help you as they slowly get killed. Always a pain being the last defender alive. Once taken over, the capture points are changed to new locations and it starts all over again. This is a very fun mode to play and is always changing.\r\n\r\n<br><br>Source: <a href=\"http://www.planetcallofduty.com/callofduty2/mp/maps.shtml\" target=\"_blank\">Planet CallOfDuty.com</A>\r\n'),
('EN',	'gametype_htf',	'The goal of HTF is to be the one who captures your team\'s flag. Where they get the \"hold\" part of \"hold the flag\" is beyond me. Think of it as a figure of speech. When a flag is capped, a special HTF scoreboard notes the point and you can see it in the same area chat and server messages are displayed in.\r\n\r\n<br><br>Source: <a href=\"http://www.planetcallofduty.com/callofduty2/mp/maps.shtml\" target=\"_blank\">Planet CallOfDuty.com</A>\r\n'),
('EN',	'gametype_sab',	'\r\n<p>Similar to Search and Destroy, a neutral suitcase bomb is placed in the center of the map, both teams rush to capture the bomb and plant it on the enemy\'s objective.&nbsp;</p>\r\n<p> Each team\'s goal is to take the bomb and blow up the objective in the enemy\'s base. The bomb carrier can fire his weapons, but his position will be announced periodically throughout the game. Also, unlike Search and Destroy, players have unlimited respawns as opposed to just one per round, although it is not instantaneous like Team Deathmatch or Free-for-All.</p>\r\n'),
('EN',	'gametype_sd',	'On all the default multiplayer maps except for \"Pavlov,\" it\'s the Allied forces attempting to search out and destroy a specific target, usually a gun emplacement. These maps typically have two potential targets for the Allied forces, so the Axis cannot simply camp out the one target and wait -- the Allied forces win if they destroy either target. The Axis win a round by killing the entire Allied team, by defusing a planted bomb, or by letting the timer run out.\r\n\r\n<br><br>Source: <a href=\"http://www.planetcallofduty.com/callofduty2/mp/maps.shtml\" target=\"_blank\">Planet CallOfDuty.com</A>\r\n'),
('EN',	'gametype_tdm',	'A somewhat more realistic play style, Team Match pits the Allies against the Axis in a large deathmatch contest. The team with the most frags wins.\r\n\r\n<br><br>Source: <a href=\"http://www.planetcallofduty.com/callofduty2/mp/maps.shtml\" target=\"_blank\">Planet CallOfDuty.com</A>\r\n'),
('EN',	'gametype_twar',	'Works like the WAR Mode, but includes vehicles. \r\n'),
('EN',	'gametype_vtdm',	'This gametype works just like Team Deathmatch, but includes vehicles. \r\n'),
('EN',	'gametype_war_codww',	'The War game mode featured in CoD3 returns. Each map has a number of territorial points that can only be captured in a linear sequence. The first team to capture the enemy’s starting point wins, and if neither team captures this point then the game enters sudden death.'),
('EN',	'medal_anti_nademagnet',	'Player who seems to who seems to attract nades '),
('EN',	'medal_anti_no1target',	'Player who was killed'),
('EN',	'medal_anti_suicide',	'Player who seems not to like his life'),
('EN',	'medal_anti_teamkiller',	'Player who killed the most team m8s'),
('EN',	'medal_anti_whiner',	'Player who is bitching around the most time (chat)'),
('EN',	'medal_pro_claymorec4',	'Player with the most claymore and c4 kills'),
('EN',	'medal_pro_explosivekiller',	'Player who has the most explosive kills '),
('EN',	'medal_pro_headshot',	'Player with the most Headshots '),
('EN',	'medal_pro_killer',	'Player who killed the most peoples '),
('EN',	'medal_pro_knifekills',	'Player with the most knife kills'),
('EN',	'medal_pro_pistol',	'Player who has the most pistol kills '),
('EN',	'medal_pro_slappyhappy',	'Player who has the most slap kills '),
('EN',	'medal_pro_sniper',	'Player who has the most sniper kills '),
('EN',	'MOD_BAYONET',	'Player was stabbed by a bayonet.'),
('EN',	'MOD_BURNED',	'Player literally burned to death'),
('EN',	'MOD_CRUSH',	'This can happen if a tank rolls over a player, maybe on purpose or maybe by accident. You never know ;)\r\n'),
('EN',	'MOD_EXPLOSIVE',	'This represents a SD Explosion. Player was to close to the bomb ;).'),
('EN',	'MOD_GRENADE',	'Directly killed by a grenade.'),
('EN',	'MOD_GRENADE_SPLASH',	'Kill by a grenade splash.'),
('EN',	'MOD_HEAD_SHOT',	'Most likely the head has been blown off. '),
('EN',	'MOD_IMPACT',	'Impact by what? I don\'t know ...'),
('EN',	'MOD_MELEE',	'Either stabbed (into the back), or killed by knife. Both is very humiliating. '),
('EN',	'MOD_PISTOL_BULLET',	'Killed by a pistol bullet.'),
('EN',	'MOD_PROJECTILE',	'Killed directly by a projectile. '),
('EN',	'MOD_PROJECTILE_SPLASH',	'Killed by a projectile Splash.'),
('EN',	'MOD_RIFLE_BULLET',	'Killed by a Rifle Bullet.'),
('EN',	'MOD_SUICIDE',	'Player killed himself, most often by accident. '),
('EN',	'MOD_UNKNOWN',	'Unknown Damagetype'),
('EN',	'weapon_briefcase_bomb_defuse_mp',	'Player was killed while defusing the bomb. '),
('EN',	'weapon_briefcase_bomb_mp',	'Killed by the S&D Bomb.'),
('EN',	'weapon_frag_grenade_mp',	'<p><b>hand grenade</b> is a small hand-held <a href=\"http://en.wikipedia.org/wiki/Anti-personnel\" title=\"Anti-personnel\" class=\"mw-redirect\">anti-personnel</a>\r\nweapon designed to be thrown and then explode after a short time. The word\r\n&quot;grenade&quot; is derived from the French <i>grenade</i>, meaning <a href=\"http://en.wikipedia.org/wiki/Pomegranate\" title=\"Pomegranate\">pomegranate</a>,\r\nso named because its <a href=\"http://en.wikipedia.org/wiki/Shrapnel\" title=\"Shrapnel\">shrapnel</a>\r\npellets reminded soldiers of the seeds of this fruit. <a href=\"http://en.wikipedia.org/wiki/Grenadier_(soldier)\" title=\"Grenadier (soldier)\" class=\"mw-redirect\">Grenadiers</a>\r\nwere originally <a href=\"http://en.wikipedia.org/wiki/Soldiers\" title=\"Soldiers\" class=\"mw-redirect\">soldiers</a>\r\nwho specialized in throwing grenades.</p>\r\n'),
('EN',	'weapon_frag_grenade_short_mp',	'Killed by a grenade which was dropped by a dead player, called Martyrdom.'),
('EN',	'weapon_none',	'Killed by no weapon? Nothing is impossible in this game, isn\'t it?');

DROP TABLE IF EXISTS `stats_maps`;
CREATE TABLE `stats_maps` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `MAPNAME` varchar(63) NOT NULL DEFAULT '',
  `DisplayName` varchar(127) NOT NULL DEFAULT '',
  `Description_id` varchar(255) NOT NULL DEFAULT '',
  `Gametypes` varchar(127) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`,`MAPNAME`),
  UNIQUE KEY `MAPNAME_UNIQUE` (`MAPNAME`),
  KEY `MAPNAME` (`MAPNAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='The parser will fill this table with map lists. You can enan';


DROP TABLE IF EXISTS `stats_players`;
CREATE TABLE `stats_players` (
  `GUID` int(11) unsigned NOT NULL DEFAULT 0,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `Time_Year` mediumint(9) NOT NULL DEFAULT 0,
  `Time_Month` tinyint(4) NOT NULL DEFAULT 0,
  `Kills` int(11) NOT NULL DEFAULT 0,
  `Deaths` int(11) NOT NULL DEFAULT 0,
  `Teamkills` int(11) NOT NULL DEFAULT 0,
  `Suicides` int(11) NOT NULL DEFAULT 0,
  `KillRatio` float NOT NULL DEFAULT 0,
  PRIMARY KEY (`GUID`,`SERVERID`,`Time_Year`,`Time_Month`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Stores total values for the player used in the Player lists ';


DROP TABLE IF EXISTS `stats_players_static`;
CREATE TABLE `stats_players_static` (
  `GUID` int(11) unsigned NOT NULL DEFAULT 0,
  `ISCLANMEMBER` tinyint(1) NOT NULL DEFAULT 0,
  `ISBANNED` tinyint(1) NOT NULL DEFAULT 0,
  `BanReason` varchar(255) NOT NULL DEFAULT '',
  `PBGUID` varchar(32) NOT NULL DEFAULT '',
  `PlayerLogoImage` varchar(255) NOT NULL DEFAULT '',
  `PlayerDescription` varchar(255) NOT NULL DEFAULT ''
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Table to store static data per player!';


DROP TABLE IF EXISTS `stats_players_topalias`;
CREATE TABLE `stats_players_topalias` (
  `GUID` int(11) unsigned NOT NULL DEFAULT 0,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `ALIASID` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`GUID`,`SERVERID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helper table to store the topaliases names';


DROP TABLE IF EXISTS `stats_player_kills`;
CREATE TABLE `stats_player_kills` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `ROUNDID` int(11) NOT NULL DEFAULT 0,
  `PLAYERID` int(11) unsigned NOT NULL DEFAULT 0,
  `ENEMYID` int(11) unsigned NOT NULL DEFAULT 0,
  `WEAPONID` smallint(6) NOT NULL DEFAULT 0,
  `DAMAGETYPEID` tinyint(4) NOT NULL DEFAULT 0,
  `HITLOCATIONID` tinyint(4) NOT NULL DEFAULT 0,
  `Kills` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`,`SERVERID`,`ROUNDID`,`PLAYERID`,`ENEMYID`,`WEAPONID`,`DAMAGETYPEID`,`HITLOCATIONID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Contains all kills made by the player';


DROP TABLE IF EXISTS `stats_roundactions`;
CREATE TABLE `stats_roundactions` (
  `ID` int(11) NOT NULL DEFAULT 0,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `ROUNDID` int(11) NOT NULL DEFAULT 0,
  `PLAYERID` int(11) unsigned NOT NULL DEFAULT 0,
  `Team` varchar(7) NOT NULL DEFAULT '',
  `ACTIONID` smallint(6) NOT NULL DEFAULT 0,
  `Count` smallint(6) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`,`SERVERID`,`ROUNDID`,`PLAYERID`,`Team`,`ACTIONID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Actions which took place in a game round like flag capture';


DROP TABLE IF EXISTS `stats_rounds`;
CREATE TABLE `stats_rounds` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `TIMEADDED` int(11) NOT NULL DEFAULT 0,
  `ROUNDDURATION` mediumint(9) NOT NULL DEFAULT 0,
  `GAMETYPE` tinyint(4) NOT NULL DEFAULT 0,
  `MAPID` int(11) NOT NULL DEFAULT 0,
  `ServerCvars` text NOT NULL,
  `AxisRoundWins` int(11) NOT NULL DEFAULT 0,
  `AxisGuids` varchar(255) NOT NULL DEFAULT '',
  `AlliesRoundWins` int(11) NOT NULL DEFAULT 0,
  `AlliesGuids` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `SERVERID` (`SERVERID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Will contain all rounds which have been played';


DROP TABLE IF EXISTS `stats_servers`;
CREATE TABLE `stats_servers` (
  `ID` tinyint(4) NOT NULL AUTO_INCREMENT,
  `Name` varchar(255) NOT NULL DEFAULT '',
  `IP` varchar(16) NOT NULL DEFAULT '',
  `Port` int(11) NOT NULL DEFAULT 0,
  `Description` text NOT NULL,
  `ModName` varchar(32) NOT NULL DEFAULT '',
  `AdminName` varchar(255) NOT NULL DEFAULT '',
  `ClanName` varchar(255) NOT NULL DEFAULT '',
  `AdminEmail` varchar(255) NOT NULL DEFAULT '',
  `GameLogLocation` varchar(255) NOT NULL DEFAULT '',
  `LastLogLine` int(11) NOT NULL DEFAULT 0,
  `LastLogLineChecksum` int(11) NOT NULL DEFAULT 0,
  `PlayedSeconds` int(11) NOT NULL DEFAULT 0,
  `ServerEnabled` tinyint(1) NOT NULL DEFAULT 0,
  `ParsingEnabled` tinyint(1) NOT NULL DEFAULT 0,
  `ftppath` varchar(255) NOT NULL DEFAULT '',
  `LastUpdate` int(11) NOT NULL DEFAULT 0,
  `ServerLogo` varchar(255) NOT NULL DEFAULT '',
  `FTPPassiveMode` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Table to store the Server Informations';


DROP TABLE IF EXISTS `stats_time`;
CREATE TABLE `stats_time` (
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `Time_Year` mediumint(9) NOT NULL DEFAULT 0,
  `Time_Month` tinyint(4) NOT NULL DEFAULT 0,
  `ROUNDID` int(11) NOT NULL DEFAULT 0,
  `PLAYERID` int(11) unsigned NOT NULL DEFAULT 0,
  `TIMEPLAYED` smallint(6) NOT NULL DEFAULT 0,
  PRIMARY KEY (`SERVERID`,`ROUNDID`,`PLAYERID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Contains Information on how long the player has played';


DROP TABLE IF EXISTS `stats_users`;
CREATE TABLE `stats_users` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(32) NOT NULL DEFAULT '',
  `password` varchar(32) NOT NULL DEFAULT '',
  `session_time` int(11) NOT NULL DEFAULT 0,
  `access_level` tinyint(4) NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='This table holds UltraStats users who can administrate them';


DROP TABLE IF EXISTS `stats_weapons`;
CREATE TABLE `stats_weapons` (
  `ID` smallint(6) NOT NULL AUTO_INCREMENT,
  `INGAMENAME` varchar(32) NOT NULL DEFAULT '',
  `BULLETNAME` varchar(32) NOT NULL DEFAULT '',
  `WeaponType` tinyint(4) NOT NULL DEFAULT 0,
  `DisplayName` varchar(127) NOT NULL DEFAULT '',
  `Description_id` varchar(255) NOT NULL DEFAULT '',
  `ExternalInfoUrl` varchar(255) NOT NULL DEFAULT '',
  `Damage` int(11) NOT NULL DEFAULT 0,
  `Accuracy` int(11) NOT NULL DEFAULT 0,
  `Ammotype` varchar(64) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `INGAMENAME_UNIQUE` (`INGAMENAME`),
  KEY `INGAMENAME` (`INGAMENAME`,`BULLETNAME`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Table containing Informations about weapons';

INSERT INTO `stats_weapons` (`ID`, `INGAMENAME`, `BULLETNAME`, `WeaponType`, `DisplayName`, `Description_id`, `ExternalInfoUrl`, `Damage`, `Accuracy`, `Ammotype`) VALUES
(1,	'none',	'',	10,	'No Weapon at all',	'weapon_none',	'',	0,	0,	'');

DROP TABLE IF EXISTS `stats_weapons_kills`;
CREATE TABLE `stats_weapons_kills` (
  `WEAPONID` smallint(6) NOT NULL,
  `SERVERID` tinyint(4) NOT NULL,
  `Time_Year` mediumint(9) NOT NULL,
  `Time_Month` tinyint(4) NOT NULL,
  `Kills` int(11) NOT NULL,
  `PlayersCount` int(11) NOT NULL,
  PRIMARY KEY (`WEAPONID`,`SERVERID`,`Time_Year`,`Time_Month`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helper table to store and combine weapon kills';


DROP TABLE IF EXISTS `stats_weapons_perserver`;
CREATE TABLE `stats_weapons_perserver` (
  `WEAPONID` int(11) NOT NULL DEFAULT 0,
  `SERVERID` tinyint(4) NOT NULL DEFAULT 0,
  `ENABLED` tinyint(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`WEAPONID`,`SERVERID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='Helper Table to define which weapons will be shown per serve';